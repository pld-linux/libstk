--- libstk/test/test_app.cpp.orig	2004-05-07 21:53:52.000000000 +0200
+++ libstk/test/test_app.cpp	2004-05-08 16:23:37.546933072 +0200
@@ -41,7 +41,9 @@
 void help(const std::string& progname, int exitval);
 int parse_args(int argc, char *argv[]);
 
+#ifdef HAVE_LOGGING
 log_level main_log_level = LL_Info;
+#endif
 
 bool scroll_slot(scroll_model::ptr target, int increment)
 {
@@ -261,6 +263,7 @@
                 break;
 
             case 'l':
+#ifdef HAVE_LOGGING
                 if (strcmp("none", optarg) == 0) main_log_level = stk::LL_None;
                 else if (strcmp("error", optarg) == 0) main_log_level = stk::LL_Error;
                 else if (strcmp("warning", optarg) == 0) main_log_level = stk::LL_Warning;
@@ -270,6 +273,10 @@
                     std::cout << "invalid log level " << optarg << std::endl;
                     help(progname, 2);
                 }
+#else
+		std::cout << "libstk was built without logging support" << std::endl;
+		exit(1);
+#endif
                 break;
 
             default:
--- libstk/test/timer_test.cpp.orig	2003-08-23 18:36:12.000000000 +0200
+++ libstk/test/timer_test.cpp	2004-05-08 16:33:06.228480336 +0200
@@ -8,7 +8,9 @@
 
 int main()
 {
+#ifdef HAVE_LOGGING
     logger::get()->add_target(&std::cout, LL_Info);
+#endif
     std::cout << "Libstk timer test, please wait 2 seconds" << std::endl;
 
     time_value a = get_current_time_value();
 
--- libstk/configure.in~	2005-09-21 15:11:14.578522856 +0200
+++ libstk/configure.in	2005-09-21 15:12:27.406451328 +0200
@@ -191,7 +191,7 @@
 
 AM_CONFIG_HEADER(libstk/config.h)
 
-CXXFLAGS="$CXXFLAGS -Wall -W -Wno-switch -pedantic -O3 -pthread"
+CXXFLAGS="$CXXFLAGS -Wall -W -Wno-switch -pthread"
 
 AC_OUTPUT([
 Makefile
diff -urN libstk-20061117.org/libstk/read_dir.h libstk-20061117/libstk/read_dir.h
--- libstk-20061117.org/libstk/read_dir.h	2006-11-17 11:27:13.000000000 +0100
+++ libstk-20061117/libstk/read_dir.h	2008-08-22 23:12:25.442977877 +0200
@@ -14,6 +14,7 @@
 
 #include <sys/types.h>
 #include <dirent.h>
+#include <strings.h>
 #include <boost/shared_ptr.hpp>
 #include <vector>
 #include <string>
--- libstk/libstk/overlay_dfb.h~	2008-10-02 08:38:53.983979076 +0200
+++ libstk/libstk/overlay_dfb.h	2008-10-02 08:39:14.560643428 +0200
@@ -118,7 +118,7 @@
         {
             INFO("destructor")
             if (locked_) unlock();
-            DFBCHECK(surface_->Release(surface_));
+            DFBCHECK((DFBResult)surface_->Release(surface_));
             surface_ = NULL;
         }
 
--- dvhart-libstk-6186fff/libstk/surface_dfb.cpp.orig	2007-07-19 10:46:21.000000000 +0200
+++ dvhart-libstk-6186fff/libstk/surface_dfb.cpp	2012-02-25 12:26:42.798505374 +0100
@@ -16,7 +16,6 @@
 #include "logging.h"
 #include <iostream>
 
-#include "utility.h"
 
 namespace stk
 {
